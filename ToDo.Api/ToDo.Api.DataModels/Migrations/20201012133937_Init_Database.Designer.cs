// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.Api.DataModels.DbModels;

namespace ToDo.Api.DataModels.Migrations
{
    [DbContext(typeof(ToDosDbContext))]
    [Migration("20201012133937_Init_Database")]
    partial class Init_Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.Api.DataModels.DbModels.ToDoSubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool>("IsComplete");

                    b.Property<string>("SubTaskName")
                        .HasMaxLength(100);

                    b.Property<int>("ToDoTaskId");

                    b.HasKey("Id");

                    b.HasIndex("ToDoTaskId");

                    b.ToTable("ToDoSubTask");

                    b.HasData(
                        new { Id = 1, Description = "Study Entity Framework", IsComplete = false, SubTaskName = "Entity Framework", ToDoTaskId = 3 },
                        new { Id = 2, Description = "Study ADO.Net", IsComplete = false, SubTaskName = "ADO.Net", ToDoTaskId = 3 },
                        new { Id = 3, Description = "Study Dapper", IsComplete = false, SubTaskName = "Dapper", ToDoTaskId = 3 }
                    );
                });

            modelBuilder.Entity("ToDo.Api.DataModels.DbModels.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsComplete");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("TaskSchedule")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoTask");

                    b.HasData(
                        new { Id = 1, IsComplete = false, TaskDescription = "To build a service for TODO List", TaskName = "Homework", TaskSchedule = new DateTime(2020, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 1 },
                        new { Id = 2, IsComplete = false, TaskDescription = "Watch the soccer game between Macedonia and Kosovo", TaskName = "Relaxing time", TaskSchedule = new DateTime(2020, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 1 },
                        new { Id = 3, IsComplete = false, TaskDescription = "Study Entity Framework, ADO.Net and Dapper", TaskName = "Studing", TaskSchedule = new DateTime(2020, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = 1 }
                    );
                });

            modelBuilder.Entity("ToDo.Api.DataModels.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new { Id = 1, FullName = "Ilija Pecevski", Password = "???8m?;T???{8}?", UserName = "pecevski" }
                    );
                });

            modelBuilder.Entity("ToDo.Api.DataModels.DbModels.ToDoSubTask", b =>
                {
                    b.HasOne("ToDo.Api.DataModels.DbModels.ToDoTask", "ToDoTask")
                        .WithMany("ToDoSubTasks")
                        .HasForeignKey("ToDoTaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ToDo.Api.DataModels.DbModels.ToDoTask", b =>
                {
                    b.HasOne("ToDo.Api.DataModels.DbModels.User", "User")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
